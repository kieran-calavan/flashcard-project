{"version":3,"sources":["Layout/Header.js","Layout/NotFound.js","utils/api/index.js","Components/Home.js","Components/Study.js","Components/Cards/CardForm.js","Components/Cards/AddCard.js","Components/Cards/EditCard.js","Components/Decks/DeckForm.js","Components/Decks/CreateDeck.js","Components/Decks/Deck.js","Components/Decks/EditDeck.js","Layout/index.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","NotFound","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","Object","objectWithoutProperties","fetchJson","_callee","url","options","onCancel","response","_regeneratorRuntime","wrap","_context","prev","next","fetch","sent","status","Error","concat","statusText","abrupt","json","t0","name","console","error","stack","Promise","resolve","stop","listDecks","_x4","_listDecks","apply","this","arguments","_callee2","signal","_context2","createDeck","_x5","_x6","_createDeck","_callee3","_context3","method","body","JSON","stringify","readDeck","_x7","_x8","_readDeck","_callee4","deckId","_context4","updateDeck","_x9","_x10","_updateDeck","_callee5","updatedDeck","_context5","id","deleteDeck","_x11","_x12","_deleteDeck","_callee6","_context6","createCard","_x13","_x14","_x15","_createCard","_callee7","card","_context7","Number","readCard","_x16","_x17","_readCard","_callee8","cardId","_context8","updateCard","_x18","_x19","_updateCard","_callee9","updatedCard","_context9","_callee10","_context10","append","Home","_useState","useState","_useState2","slicedToArray","decks","setDecks","history","useHistory","useEffect","_fetchData","asyncToGenerator","Home_regeneratorRuntime","mark","abortController","deckResponse","AbortController","abort","fetchData","react_router_dom","to","xmlns","width","height","fill","viewBox","d","map","key","text-end","length","description","type","onClick","window","confirm","go","handleDelete","Study","setDeck","useParams","_useState3","_useState4","setCard","_useState5","_useState6","front","setFront","then","aria-label","aria-current","back","showCard","push","CardForm","_ref","submitHandler","_ref$card","changeHandler","event","objectSpread","defineProperty","target","value","onSubmit","htmlFor","required","placeholder","onChange","AddCard","_submitHandler","AddCard_regeneratorRuntime","preventDefault","Cards_CardForm","_x","EditCard","_useParams","EditCard_regeneratorRuntime","_fetchData2","DeckForm","_ref$deck","defaultValue","CreateDeck","CreateDeck_regeneratorRuntime","log","Decks_DeckForm","Deck","handleDeleteCard","_x20","_x21","_deleteCard","deleteCard","Deck_regeneratorRuntime","handleDeleteDeck","EditDeck","EditDeck_regeneratorRuntime","Layout","Fragment","Layout_Header","react_router","exact","path","Components_Home","Components_Study","Decks_CreateDeck","Decks_Deck","Decks_EditDeck","Cards_AddCard","Cards_EditCard","Layout_NotFound","App","src_Layout","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.89f642d6.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:8080\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React, {useEffect, useState} from \"react\";\nimport {listDecks, deleteDeck} from \"../utils/api/index\";\nimport {Link, useHistory} from \"react-router-dom\";\n\nfunction Home () {\n  const [decks, setDecks] = useState ([])  \n  const history = useHistory();\n\n  useEffect(() => {\n    async function fetchData() {\n        const abortController = new AbortController();\n        try {\n            const deckResponse = await listDecks(abortController.signal);\n            setDecks(deckResponse);\n        } catch (error) {\n            console.error(\"Something went wrong\", error);\n        }\n        return () => {\n            abortController.abort();\n        };\n    }\n    fetchData();\n}, []);\n\n  function handleDelete(deck) {\n    \n    if (\n        window.confirm(\n            `Delete this deck? You will not be able to recover it`\n        )\n    ) {\n        history.go(0);\n        return deleteDeck(deck.id);\n    }\n}\n\n  return (\n   <div>\n    <Link to=\"/decks/new\" className=\"btn btn-secondary my-2 \" >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-plus-lg mr-2 mb-1\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\"></path>\n      </svg>Create Deck</Link>\n     {decks.map(deck =>  <div key={deck.id} className=\"card\">\n    <div className=\"card-body\">\n    <h5 className=\"card-title\">{deck.name}\n\n    <small text-end=\"true\">\n    &nbsp;&nbsp; {deck.cards.length} cards\n    </small>\n    </h5>\n    <p className=\"card-text\">{deck.description}</p>\n      <Link to={`/decks/${deck.id}`} className=\"btn btn-secondary m-lg-1\">\n        <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-eye-fill mr-2 mb-1\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z\" />\n        <path d=\"M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z\" />\n      </svg>View</Link>\n\n      <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary m-lg-1 m-2\">\n        <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-journal-album mr-2 mb-1\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M5.5 4a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-5a.5.5 0 0 0-.5-.5h-5zm1 7a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1h-3z\" />\n        <path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z\" />\n        <path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z\" />\n      </svg>Study</Link>\n\n    <button type=\"button\" className=\"btn btn-danger m-lg-2\" onClick={() => handleDelete(deck)}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-trash-fill mb-1\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 \n        2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 \n        0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 \n        0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 \n        0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"></path>\n      \n      </svg> Delete</button>\n    </div>\n\n  </div>)}\n</div> )\n}\n\nexport default Home","import React, {useState, useEffect} from \"react\";\nimport {Link, useParams, useHistory} from \"react-router-dom\";\nimport {readDeck} from \"../utils/api/index\"\n\nfunction Study() {\n    const [deck, setDeck] = useState ({cards:[]})  \n    const {deckId} = useParams();\n    const history = useHistory()\n    const [card, setCard] = useState(0)\n    const [front, setFront] = useState (true)\n    useEffect(() => {\n       readDeck(deckId).then(setDeck)\n    },[deckId])\n    function showCard() {\n      if (!deck.cards.length) return \n      if (front) {  \n        return deck.cards[card].front\n      }  \n      return deck.cards[card].back\n    }\n\n    function next () {\n      if (card === deck.cards.length-1) {\n        if (window.confirm(\"Restart cards?\")) {\n        return setCard(0)\n        }\n        history.push(\"/\")\n        return \n      }\n      setCard(card+1)\n    }\n  return (\n   <div>\n    <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item active\" aria-current=\"page\"> \n        <Link to='/'>Home</Link> </li>\n\n        <li className=\"breadcrumb-item\"> \n        <Link to={`/decks/${deckId}`}>{deck.name}</Link> </li>\n        </ol>\n    </nav>\n\n    <div key={deck.id} className=\"card\">\n    <div className=\"card-body\">\n    \n\n    {deck.cards.length < 3?(\n      <div> \n        <h5>\n          Not enough cards.\n        </h5>\n        <p> You need at least 3 cards to study. There are {deck.cards.length} cards in the deck.</p>\n        <Link to={`/decks/${deck.id}/cards/new`}>Add Cards</Link>\n      </div>\n    ):(\n      <div> \n        <p className=\"card-text\">Card {card+1} of {deck.cards.length}</p>\n    <p className=\"card-front\">{showCard()}</p>\n    <button onClick={() => setFront(!front)} className=\"btn btn-secondary\">Flip</button>\n    {front === false && <button onClick={() => next()} className=\"btn btn-primary\">Next</button>}\n      </div>\n    )}\n    \n\n    </div>\n\n  </div>\n</div> )\n}\n\nexport default Study","import React from \"react\";\n\nfunction CardForm({submitHandler,card ={},setCard}) {\n  \n  const changeHandler = (event) => {\n    setCard({ ...card, [event.target.name]: event.target.value });\n  };\n  \n\n  \n  return (\n    <div>\n  <form className=\"col\" onSubmit={submitHandler}>\n    <fieldset>\n    <label className=\"mr-3\" htmlFor=\"front\">Front </label>\n    <textarea\n      id=\"front\"\n      type=\"text\"\n      name=\"front\"\n      required\n      placeholder=\"front\"\n      value={card.front}\n      onChange={changeHandler}\n    ></textarea>\n    </fieldset>\n    <fieldset>\n    <label className=\"mr-3\" htmlFor=\"back\">Back </label>\n    <textarea\n        id=\"back\"\n        type=\"text\"\n        name=\"back\"\n        placeholder=\"Brief description of the deck\"\n        value={card.back}\n        onChange={changeHandler}\n      ></textarea>\n      </fieldset>\n\n\n<button type=\"button\" className=\"btn btn-secondary\">Cancel</button>\n<button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n</form>\n</div>\n  )\n}\nexport default CardForm","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { createCard, readDeck } from \"../../utils/api/index\";\nimport CardForm from \"./CardForm\";\n\nfunction AddCard() {\n    const { deckId } = useParams();\n    \n    const history = useHistory();\n    const initialState = {\n        front: \"\",\n        back: \"\",\n    };\n    const [card, setCard] = useState(initialState);\n    const [deck, setDeck] = useState({});\n\n    useEffect(() => {\n        async function fetchData() {\n            const abortController = new AbortController();\n            if (!deckId) return\n            try {\n                const response = await readDeck(deckId, abortController.signal);\n                setDeck(response);\n            } catch (error) {\n                console.error(\"Something went wrong\", error);\n            }\n            return () => {\n                abortController.abort();\n            };\n        }\n        fetchData();\n    }, [deckId]);\n\n    async function submitHandler(event) {\n        event.preventDefault();\n        const abortController = new AbortController();\n        const response = await createCard(\n            deckId,\n            { ...card },\n            abortController.signal\n        );\n        history.push(\"/decks/\"+deckId);\n        return response;\n    }\n\n    return (\n      <div>\n        <div>\n            <ol className=\"breadcrumb\">\n                <li className=\"breadcrumb-item\">\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li className=\"breadcrumb-item\">\n                    <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n                </li>\n                <li className=\"breadcrumb-item active\">Add Card</li>\n            </ol>\n        </div>\n        <CardForm submitHandler={submitHandler} card = {card} setCard = {setCard}/>\n    </div>\n    );\n}\n\nexport default AddCard;","import React,{useState, useEffect} from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {Link} from \"react-router-dom\";\nimport { readDeck, readCard, updateCard} from \"../../utils/api/index\";\nimport CardForm from \"./CardForm\"\n\n\nfunction EditCard() {\n    const [deck, setDeck] = useState ({})\n    const {deckId, cardId} = useParams();  \n    const history = useHistory()\n    const initialState = {\n      front: \"\",\n      back: \"\",\n  };\n\n  const [card, setCard] = useState(initialState);\n\n  useEffect(() => {\n      async function fetchData() {\n          const abortController = new AbortController();\n          try {\n              const response = await readDeck(deckId, abortController.signal);\n              setDeck(response);\n          } catch (error) {\n              console.error(\"Something went wrong\", error);\n          }\n          return () => {\n              abortController.abort();\n          };\n      }\n      fetchData();\n  }, [deckId]);\n\n  useEffect(() => {\n    async function fetchData() {\n        const abortController = new AbortController();\n        try {\n            const response = await readCard(cardId, abortController.signal);\n            setCard(response);\n        } catch (error) {\n            console.error(\"Something went wrong\", error);\n        }\n        return () => {\n            abortController.abort();\n        };\n    }\n    fetchData();\n}, [cardId]);\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n    const response = await updateCard(\n        { ...card },\n        abortController.signal\n    );\n    history.push(\"/decks/\"+deckId);\n    return response;\n}\n\nreturn (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to ='/'>Home</Link></li>\n        <li className=\"breadcrumb-item\" aria-current=\"page\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\n        <li className=\"breadcrumb-item\" aria-current=\"page\">Edit Deck</li>\n      </ol>\n      </nav>\n        \n<CardForm submitHandler = {submitHandler} card = {card} setCard = {setCard} />\n\n</div>\n  )\n}\nexport default EditCard","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction DeckForm({submitHandler,deck={name:\"\",description:\"\"},setDeck}) {\n  \n  const changeHandler = (event) => {\n    setDeck({ ...deck, [event.target.name]: event.target.value });\n  };\n\n  \n  return (\n    <div>\n      \n        \n  <form onSubmit={submitHandler}>\n    <fieldset>\n    <label className=\"mr-3\" htmlFor=\"name\">Name</label>\n    <input\n      id=\"name\"\n      type=\"text\"\n      name=\"name\"\n      required\n      placeholder=\"Deck Name\"\n      value={deck.name}\n      onChange={changeHandler}\n    />\n    </fieldset>\n    <fieldset>\n    <label className=\"mr-3\" htmlFor=\"description\">Description</label>\n    <textarea\n        id=\"description\"\n        type=\"text\"\n        name=\"description\"\n        placeholder=\"Brief description of the deck\"\n        defaultValue={deck.description}\n        onChange={changeHandler}\n      />\n    </fieldset>\n\n\n<Link to=\"/\" className=\"btn btn-secondary\">Cancel</Link>\n<button className=\"btn btn-primary\">Submit</button>\n</form>\n</div>\n  )\n}\nexport default DeckForm","import React, {useState} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport { createDeck } from \"../../utils/api\";\nimport DeckForm from \"./DeckForm\";\n\n\nfunction CreateDeck() {\n  const [deck, setDeck] = useState({name:\"\",description:\"\"})\n  const history = useHistory()\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    const response = await createDeck(\n      deck\n    );\n    history.push(\"/decks/\"+response.id)\n    console.log(\"Saved response!\", response);\n  };\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to ='/'>Home</Link></li>\n        <li className=\"breadcrumb-item\" aria-current=\"page\">Create Deck</li>\n      </ol>\n      </nav>\n        \n  <DeckForm submitHandler={submitHandler} deck={deck} setDeck={setDeck}/>\n</div>\n  )\n}\nexport default CreateDeck","import React, {useEffect, useState} from \"react\";\nimport {Link, useParams, useHistory} from \"react-router-dom\";\nimport {readDeck, deleteDeck, deleteCard} from \"../../utils/api/index\";\n\n\nfunction Deck () {\n  const [deck, setDeck] = useState ({cards:[]})\n  const { deckId } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    async function fetchData() {\n        const abortController = new AbortController();\n        try {\n            const deckResponse = await readDeck(deckId, abortController.signal);\n            setDeck(deckResponse);\n        } catch (error) {\n            console.error(\"Something went wrong\", error);\n        }\n        return () => {\n            abortController.abort();\n        };\n    }\n    fetchData();\n}, [deckId]);\n\nfunction handleDeleteDeck(deck) {\n    \n  if (\n      window.confirm(\n          `Delete this deck? You will not be able to recover it`\n      )\n  ) {\n      history.go(0);\n      return deleteDeck(deck.id);\n  }\n}\n\nfunction handleDeleteCard(card) {\n    \n  if (\n      window.confirm(\n          `Delete this card? You will not be able to recover it`\n      )\n  ) {\n      history.go(0);\n      return deleteCard(card.id);\n  }\n}\n\n  return (\n   <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item active\" aria-current=\"page\">\n        <Link to='/'>Home</Link>\n        </li>\n        <li className=\"breadcrumb-item\" aria-current=\"page\">{deck.name}</li>\n        </ol>\n      </nav>\n    \n    <div key={deck.id} className=\"card-deck\">\n    <div className=\"card-body\">\n    <h5 className=\"card-title\">{deck.name}</h5>\n    <p className=\"card-text\">{deck.description}</p>\n    <Link to={`/decks/${deck.id}/edit`} className=\"btn btn-secondary m-lg-1 m-1\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-pencil-fill mr-2 mb-1\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\" />\n      </svg>Edit</Link>\n    <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary m-lg-1 m-1\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-journal-album mr-2 mb-1\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M5.5 4a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-5a.5.5 0 0 0-.5-.5h-5zm1 7a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1h-3z\" />\n        <path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z\" />\n        <path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z\" />\n      </svg>Study</Link>\n    <Link to={`/decks/${deck.id}/cards/new`} className=\"btn btn-primary m-lg-1 m-1\">Add Cards</Link>\n    <button type=\"button\" className=\"btn btn-danger m-1\" onClick={() => handleDeleteDeck(deck)}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-trash-fill mb-1\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 \n        2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 \n        0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 \n        0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 \n        0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"></path>\n      \n      </svg> Delete</button>\n    </div>\n  </div>\n\n  {deck.cards.map(card => \n  <div key={card.id} className=\"card\">\n  <div className=\"row\">\n    <div className=\"col\">{card.front}</div>\n\n  <div className=\"col\"> {card.back}\n  <div className=\"mt-5\"> \n  <Link to={`/decks/${deck.id}/cards/${card.id}/edit`} className=\"btn btn-secondary m-lg-1\">\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-pencil-fill mr-2 mb-1\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\" />\n      </svg>Edit</Link>\n  <button type=\"button\" className=\"btn btn-danger m-lg-1\" onClick={() => handleDeleteCard(card)}>\n\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-trash-fill mb-1\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 \n        2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 \n        0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 \n        0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 \n        0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"></path>\n      \n      </svg> Delete</button>\n      </div>\n  </div>\n  </div>\n  </div>)}\n</div> )\n}\nexport default Deck","import React, {useState, useEffect} from \"react\";\nimport {Link, useParams, useHistory} from \"react-router-dom\";\nimport { updateDeck, readDeck } from \"../../utils/api\";\nimport DeckForm from \"./DeckForm\";\n\n\nfunction EditDeck() {\n  const [deck, setDeck] = useState({name:\"\",description:\"\"})\n  const {deckId} = useParams();\n  const history = useHistory()\n\n  useEffect(() => {\n    async function fetchData() {\n        const abortController = new AbortController();\n        if (!deckId) {\n          return \n        }\n        try {\n            const deckResponse = await readDeck(deckId, abortController.signal);\n            setDeck(deckResponse);\n        } catch (error) {\n            console.error(\"Something went wrong\", error);\n        }\n        return () => {\n            abortController.abort();\n        };\n    }\n    fetchData();\n}, [deckId]);\n\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    const response = await updateDeck(\n\n      deck\n    );\n    history.push(\"/decks/\"+response.id)\n    console.log(\"Saved response!\", response);\n  };\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to ='/'>Home</Link></li>\n        <li className=\"breadcrumb-item\"> \n        <Link to={`/decks/${deck.id}/study`}>{deck.name}</Link></li>\n        <li className=\"breadcrumb-item\" aria-current=\"page\">Edit Deck</li>\n      </ol>\n      </nav>\n        \n  <DeckForm submitHandler={submitHandler} deck={deck} setDeck={setDeck}/>\n</div>\n  )\n}\nexport default EditDeck","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"../Components/Home\"\nimport Study from \"../Components/Study\"\nimport AddCard from \"../Components/Cards/AddCard\"\nimport EditCard from \"../Components/Cards/EditCard\"\nimport CreateDeck from \"../Components/Decks/CreateDeck\"\nimport Deck from \"../Components/Decks/Deck\"\nimport EditDeck from \"../Components/Decks/EditDeck\"\n\n\n\nfunction Layout() {\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          \n          <Route path='/decks/:deckId/study'>\n            <Study />\n          </Route>\n\n          <Route path='/decks/new'>\n            <CreateDeck />\n          </Route>\n\n          <Route exact path='/decks/:deckId'>\n            <Deck />\n          </Route>\n\n          <Route path='/decks/:deckId/edit'>\n            <EditDeck />\n          </Route>\n\n          <Route exact path='/decks/:deckId/cards/new'>\n            <AddCard />\n          </Route>\n\n          <Route path='/decks/:deckId/cards/:cardId/edit'>\n            <EditCard />\n          </Route>\n          \n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>  \n      </div>\n    </>\n  );\n}\n\nexport default Layout;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}